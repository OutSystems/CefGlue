<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>$(DotnetVersion)</TargetFramework>
    <AssemblyName>Xilium.CefGlue.BrowserProcess</AssemblyName>
    <RootNamespace>Xilium.CefGlue.BrowserProcess</RootNamespace>
    <RuntimeIdentifiers>osx-x64;osx-arm64;win-x64;win-arm64;linux-x64;linux-arm64</RuntimeIdentifiers>
    <RunPostBuildEvent>OnOutputUpdated</RunPostBuildEvent>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <PublishCommonConfig>Configuration=$(Configuration);Platform=$(Platform);TargetFramework=$(TargetFramework);IsPublishing=False;RuntimeIdentifier=</PublishCommonConfig>
    <IsEditbinEnabled>True</IsEditbinEnabled>
	  <RollForward>Major</RollForward>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="ObjectBinding\CefGlueGlobalScript.js" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="ObjectBinding\CefGlueGlobalScript.js" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\CefGlue.Common.Shared\CefGlue.Common.Shared.csproj" />
    <ProjectReference Include="..\CefGlue\CefGlue.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="System.Runtime.Loader" />
  </ItemGroup>

  <Target Name="Editbin" AfterTargets="Compile" Condition="$(IsEditbinEnabled) == True And $(VcvarsFile) != '' And $([MSBuild]::IsOSPlatform('Windows'))">
    <!--
      Quick explanation: This target runs after compile, and currently 3 more times for each MSBuild command executed in the next target "PublishApp".
      We just want this target to be executed for windows specs and when passed the VcvarsFile location.
      Using VS Studio: VcvarsFile="$(DevEnvDir)..\..\VC\Auxiliary\Build\vcvars64.bat"
      Using VS Studio tools: VcvarsFile="C:\Program Files\Microsoft Visual Studio\2022\Professional\VC\Auxiliary\Build\vcvars64.bat"
    -->

    <PropertyGroup>
      <ApphostLocation>$(ProjectDir)$(BaseIntermediateOutputPath)$(Platform)\$(Configuration)\$(TargetFramework)\</ApphostLocation>
      <ApphostLocation Condition="'$(IsPublishing)' == 'True'">$(ApphostLocation)$(RuntimeIdentifier)\</ApphostLocation> <!-- When publishing, we also use the runtime identifiers (check the next target "PublishApp") -->
    </PropertyGroup>

    <!--
      This command aims at increasing the stack size of Xilium.CefGlue.BrowserProcess.exe to 8 MiBs, using the visual studio tool "editbin".
      Since we are reaching the .exe at the compile time, the file name is "apphost.exe" instead and located at /obj folder
    -->
    <Exec Command="call &quot;$(VcvarsFile)&quot;&#xD;&#xA; editbin /STACK:0x800000 &quot;$(ApphostLocation)\apphost.exe&quot;&#xD;&#xA;" />
  </Target>

    <Target Name="PublishApp" AfterTargets="AfterBuild" Condition="'$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' and '$(IsPublishing)' != 'False'">
        <!-- WINDOWS -->
        <Message Text="Publishing CefGlue.BrowserProcess on Windows ($(Platform))..." Importance="High" />
        <MSBuild Projects="CefGlue.BrowserProcess.csproj" Targets="Build" Properties="$(PublishCommonConfig)win-$(ArchitectureConfig);IsEditbinEnabled=True;" />

        <!-- LINUX -->
        <Message Text="Publishing CefGlue.BrowserProcess on Linux ($(Platform))..." Importance="High" />
        <MSBuild Projects="CefGlue.BrowserProcess.csproj" Targets="Build" Properties="$(PublishCommonConfig)linux-$(ArchitectureConfig);IsEditbinEnabled=False;" />

        <!-- OSX -->
        <Message Text="Publishing CefGlue.BrowserProcess on MacOS ($(Platform))..." Importance="High" />
        <MSBuild Projects="CefGlue.BrowserProcess.csproj" Targets="Build" Properties="$(PublishCommonConfig)osx-$(ArchitectureConfig);IsEditbinEnabled=False;" />
    </Target>

</Project>
