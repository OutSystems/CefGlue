<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>$(DotnetVersion)</TargetFramework>
    <AssemblyName>Xilium.CefGlue.BrowserProcess</AssemblyName>
    <RootNamespace>Xilium.CefGlue.BrowserProcess</RootNamespace>
    <RuntimeIdentifiers>osx-x64;osx-arm64;win-x64;win-arm64;linux-x64;linux-arm64</RuntimeIdentifiers>
    <RunPostBuildEvent>OnOutputUpdated</RunPostBuildEvent>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <PublishCommonConfig>Configuration=$(Configuration);Platform=$(Platform);TargetFramework=$(TargetFramework);IsPublishing=True;PublishTrimmed=True;SelfContained=True;RuntimeIdentifier=</PublishCommonConfig>
    <IsEditbinEnabled>True</IsEditbinEnabled>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="ObjectBinding\CefGlueGlobalScript.js" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="ObjectBinding\CefGlueGlobalScript.js" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\CefGlue.Common.Shared\CefGlue.Common.Shared.csproj" />
    <ProjectReference Include="..\CefGlue\CefGlue.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="System.Runtime.Loader" />
  </ItemGroup>

  <Target Name="Editbin" BeforeTargets="AfterBuild">
    <!--
      Quick explanation: This target runs after build, and currently 3 more times for each MSBuild command executed in the next target "PublishApp".
      We just want this target to be executed for windows specs.
    -->

    <PropertyGroup>
      <VcvarsFile Condition="'$(Platform)' == 'x64'">vcvars64.bat</VcvarsFile>
      <VcvarsFile Condition="'$(Platform)' == 'ARM64'">vcvarsamd64_arm64.bat</VcvarsFile>
      <VcvarsLocation Condition="Exists($(DevEnvDir))">$(DevEnvDir)..\..\VC\Auxiliary\Build\</VcvarsLocation>
      <VcvarsLocation Condition="!Exists($(DevEnvDir))">C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\</VcvarsLocation> <!-- Path used in Microsoft-hosted agents -->
      <RunsEditBin Condition="$(VcvarsFile) != '' And $(IsEditbinEnabled) == True And $([MSBuild]::IsOSPlatform('Windows'))">True</RunsEditBin>
    </PropertyGroup>

    <!--
      This command aims at increasing the stack size of Xilium.CefGlue.BrowserProcess.exe to 8 MiBs, using the visual studio tool "editbin".
      Comment it only for development purposes.
    -->
    <Exec Condition="$(RunsEditBin) == True" Command="call &quot;$(VcvarsLocation)$(VcvarsFile)&quot;&#xD;&#xA; editbin /STACK:0x800000 &quot;$(TargetDir)Xilium.CefGlue.BrowserProcess.exe&quot;&#xD;&#xA;" />
  </Target>

  <Target Name="PublishApp" AfterTargets="Editbin" Condition="'$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)' and '$(IsPublishing)' != 'True'">
    <!-- WINDOWS -->
    <Message Text="Publishing CefGlue.BrowserProcess on Windows ($(Platform))..." Importance="High" />
    <MSBuild Projects="CefGlue.BrowserProcess.csproj" Targets="Publish" Properties="$(PublishCommonConfig)win-$(ArchitectureConfig);IsEditbinEnabled=True;"  />

    <!-- LINUX -->
    <Message Text="Publishing CefGlue.BrowserProcess on Linux ($(Platform))..." Importance="High" />
    <MSBuild Projects="CefGlue.BrowserProcess.csproj" Targets="Publish" Properties="$(PublishCommonConfig)linux-$(ArchitectureConfig);IsEditbinEnabled=False;" />

    <!-- OSX -->
    <Message Text="Publishing CefGlue.BrowserProcess on MacOS ($(Platform))..." Importance="High" />
    <MSBuild Projects="CefGlue.BrowserProcess.csproj" Targets="Publish" Properties="$(PublishCommonConfig)osx-$(ArchitectureConfig);IsEditbinEnabled=False;" />
  </Target>
</Project>
